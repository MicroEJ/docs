<!--
	DocBook

	Copyright 2013-2019 IS2T. All rights reserved.
	IS2T PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
--><chapter id="chapter.microej.getting.started" xmlns:xi="http://www.w3.org/2001/XInclude">
  <title>MicroEJ Studio Getting Started</title>
  <section id="microej.introduction">
    <title>Introducing MicroEJ Studio and Virtual Devices</title>
    <para>MicroEJ Studio provides tools based on Eclipse to develop software applications for MicroEJ-ready devices. MicroEJ Studio allows application developers to write MicroEJ applications, run them on a virtual (simulated) or real device, and publish them to a MicroEJ Forge instance.</para>
    <para>This document is an introduction to application development with MicroEJ Studio. The purpose of MicroEJ Studio is to develop for targeted MCU/MPU computers (IoT, wearable, etc.) and it is therefore a cross-development tool.</para>
    <para>Unlike standard low-level cross-development tools, MicroEJ Studio offers unique services like hardware simulation, deployment to the target hardware and final publication to a MicroEJ Forge instance.</para>
    <para>Application development is based on the following elements:</para>
    <itemizedlist>
      <listitem>
        <para>MicroEJ Studio, the integrated development environment for writing applications. It is based on Eclipse and relies on the integrated Java compiler (JDT). It also provides a dependency manager for managing MicroEJ Libraries (see <xref linkend="section.ivy.dependency.manager"></xref>). The current version of MicroEJ Studio is built on top of Eclipse Oxygen (<code>https://www.eclipse.org/oxygen/</code>).</para>
      </listitem>
      <listitem>
        <para>MicroEJ Virtual Device, a software package including the resources and tools required for building and testing an application for a specific MicroEJ-ready device. A Virtual Device will simulate all capabilities of the corresponding hardware board: <itemizedlist>
            <listitem>
              <para>Computation and Memory,</para>
            </listitem>
            <listitem>
              <para>Communication channels (e.g. Network, USB ...),</para>
            </listitem>
            <listitem>
              <para>Display,</para>
            </listitem>
            <listitem>
              <para>User interaction.</para>
            </listitem>
          </itemizedlist></para>
        <para>Virtual Devices are imported into MicroEJ Studio within a local folder called MicroEJ Repository. Once a Virtual Device is imported, an application can be launched and tested on Simulator. It also provides a mean to locally deploy the application on a MicroEJ-ready device.</para>
      </listitem>
      <listitem>
        <para>MicroEJ-ready device, a hardware device that has been previously programmed with a MicroEJ Firmware. A MicroEJ Firmware is a binary instance of MicroEJ runtime for a target hardware board. MicroEJ-ready devices are built using MicroEJ SDK. MicroEJ Virtual Devices and MicroEJ Firmwares share the same version (there is a 1:1 mapping).</para>
      </listitem>
    </itemizedlist>
    <para>The following figure gives an overview of MicroEJ Studio possibilities:</para>
    <figure>
      <title>MicroEJ Application Development Overview</title>
      <mediaobject id="overview">
        <imageobject>
          <imagedata align="center" contentdepth="100%" fileref="png/1_overview.png" format="PNG" scalefit="1" width="100%"></imagedata>
        </imageobject>
      </mediaobject>
    </figure>
  </section>
  <section>
    <title>Perform Online Getting Started</title>
    <para>MicroEJ Studio Getting Started is available on <code>https://developer.microej.com/5/getting-started-studio.html</code>.</para>
    <para>Starting from scratch, the steps to go through the whole process are: <orderedlist>
        <listitem>
          <para>Setup a board and test a MicroEJ Firmware:</para>
          <itemizedlist>
            <listitem>
              <para>Select between one of the available boards;</para>
            </listitem>
            <listitem>
              <para>Download and install a MicroEJ firmware on the target hardware;</para>
            </listitem>
            <listitem>
              <para>Deploy and run a MicroEJ demo on board.</para>
            </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>Setup and learn to use development tools:</para>
          <itemizedlist>
            <listitem>
              <para>Download and install MicroEJ Studio;</para>
            </listitem>
            <listitem>
              <para>Download and install the corresponding Virtual Device for the target hardware;</para>
            </listitem>
            <listitem>
              <para>Download, build and run your first application on Simulator;</para>
            </listitem>
            <listitem>
              <para>Build and run your first application on target hardware.</para>
            </listitem>
          </itemizedlist>
        </listitem>
      </orderedlist></para>
    <para>The following figure gives an overview of the MicroEJ software components required for both host computer and target hardware:</para>
    <figure>
        <title>MicroEJ Studio Development Imported Elements</title>
        <mediaobject id="download">
          <imageobject>
            <imagedata align="center" contentdepth="100%" fileref="png/2_download.png" format="PNG" scalefit="1" width="100%"></imagedata>
          </imageobject>
        </mediaobject>
      </figure>
  </section>
  <section id="section.application.publication">
    <title>Application Publication</title>
    <section id="section.build.wadapps.package">
      <title>Build the WPK</title>
      <para>When the application is ready for deployment, the last step in MicroEJ Studio is to create the WPK (Wadapps PacKage) file that is intended to be published on a MicroEJ Forge instance for end users.</para>
      <para>In MicroEJ Studio, right-click on the Sandboxed Application project name and select <code>Build Module</code>.</para>
      <para>The WPK build process will display messages in MicroEJ console, ending up the following message:</para>
      <para>
        <code>[echo] project hello published locally with version 0.1.0-RC201907091602</code>
      </para>
      <para>
        <code>BUILD SUCCESSFUL</code>
      </para>
      <para>
        <code>Total time: 1 minute 6 seconds</code>
      </para>
    </section>
    <section id="section.publish.on.a.microej.store">
      <title>Publish on a MicroEJ Forge Instance</title>
      <para>The WPK file produced by the build process is located in a dedicated <code>target~/artifacts</code> folder in the project. <mediaobject id="store-publish3">
          <imageobject>
            <imagedata align="center" contentdepth="80%" fileref="png/12_Publish3.png" format="PNG" scalefit="1" width="100%"></imagedata>
          </imageobject>
        </mediaobject></para>
      <para>The <code>.wpk</code> file is ready to be uploaded to a MicroEJ Forge instance. Please consult <code>https://community.microej.com</code> for more information. <mediaobject>
          <imageobject>
            <imagedata align="center" contentdepth="100%" fileref="png/9_Publish.png" format="PNG" scalefit="1" width="80%"></imagedata>
          </imageobject>
        </mediaobject></para>
    </section>
  </section>
  <section id="section.install.and.setup.studio">
    <title>Workspaces and Virtual Devices Repositories</title>
    <para>When starting MicroEJ Studio, it prompts you to select the last used workspace or a default workspace on the first run. A workspace is a main folder where to find a set of projects containing source code.</para>
    <para>When loading a new workspace, MicroEJ Studio prompts for the location of the MicroEJ repository, where the Virtual Devices will be imported. By default, MicroEJ Studio suggests to point to the default MicroEJ repository on your operating system, located at <code>${user.home}/.microej/repositories/[version]</code>. You can select an alternative location. Another common practice is to define a local repository relative to the workspace, so that the workspace is self-contained, without external file system links and can be shared within a zip file.</para>
  </section>
  <section id="section.application.development">
    <title>Application Development</title>
    <para>The following sections of this document shall prove useful as a reference when developing applications for MicroEJ. They cover concepts essential to MicroEJ applications design.</para>
    <para>In addition to these sections, by going to <code>https://developer.microej.com/</code>, you can access a number of helpful resources such as: <itemizedlist>
        <listitem>
          <para>Libraries from the MicroEJ Central Repository (<code>https://repository.microej.com/</code>);</para>
        </listitem>
        <listitem>
          <para>Application Examples as source code from MicroEJ Github Repositories (<code>https://github.com/MicroEJ</code>);</para>
        </listitem>
        <listitem>
          <para>Documentation (HOWTOs, Reference Manuals, APIs javadoc...).</para>
        </listitem>
      </itemizedlist></para>
  </section>
</chapter>
