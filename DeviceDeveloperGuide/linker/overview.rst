Overview
========

LINKER is a standard linker that is compliant with the Executable and
Linkable File format (ELF).

LINKER takes one or several relocatable binary files and generates an
image representation using a description file. The process of extracting
binary code, positioning blocks and resolving symbols is called linking.

Relocatable object files are generated by SOAR and third-party
compilers. An archive file is a container of Relocatable object files.

The description file is called a Linker Specific Configuration file
(lsc). It describes what shall be embedded, and how those things shall
be organized in the program image. The linker outputs :

-  An ELF executable file that contains the image and potential debug
   sections. This file can be directly used by debuggers or programming
   tools. It may also be converted into a another format (Intel\* hex,
   Motorola\* s19, rawBinary, etc.) using external tools, such as
   standard GNU binutils toolchain (objcopy, objdump, etc.).

-  A map file, in XML format, which can be viewed as a database of what
   has been embedded and resolved by the linker. It can be easily
   processed to get a sort of all sizes, call graphs, statistics, etc.

-  The linker is composed with one or more library loaders, according to
   the platform's configuration.
