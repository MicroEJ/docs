<?xml version="1.0" encoding="UTF-8"?>
<project name="wbe-doc" default="generate">

	<target name="generate">
		<property name="title.level" value="3" /> <!-- start with sections === -->
		<property name="output.conditions" value="false" />
		<property name="jars.dir" location="jars" />
		<property name="architecture.dir" location="architecture" />

		<mkdir dir="${jars.dir}"/>
		<copy todir="${jars.dir}" flatten="true" overwrite="true">
			<fileset dir="${architecture.dir}" includes="**/workbenchExtension*.jar">
				<!-- exclude deprecated modules -->
				<exclude name="**/*nls*"/>
				<exclude name="**/*store*"/>
				<exclude name="**/*cldc*"/>
			</fileset>
		</copy>

		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/architecture_options" 
			outputname="sectionArchitectureOptions.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${jars.dir}/workbenchExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>
		
		<!-- code coverage analyzer -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/cca_options/" 
			outputname="cca_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/codeCoverageAnalyzerExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>

		<!-- elf to map -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/elftomap_options/" 
			outputname="elftomap_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/elftomapExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>

		<!-- heap dumper platform -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/heapdumper_options" 
			outputname="heapdumper_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/heapDumperPlatformExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>

		<!-- kernel API generator -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../KernelDeveloperGuide" 
			imagesoutputname="png/kernelAPIgenerator_options" 
			outputname="kernelAPIgenerator_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/kernelAPIGeneratorExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>

		<!-- serial to socket transmitter -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/serialToSocketTransmitter_options" 
			outputname="serialToSocketTransmitter_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/serialToSocketTransmitterExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>

		<!-- stack trace decrypter -->
		<microbsp.buildJPFExtension 
			titleLevel="${title.level}" 
			imagewidth="1080" 
			imageheight="600" 
			verboselevel="9" 
			maxImageWidth="150" 
			outputdir="${basedir}/../../ApplicationDeveloperGuide" 
			imagesoutputname="images/stackTraceReader_options" 
			outputname="stackTraceReader_use.rst" 
			outputConditions="${output.conditions}" 
			outputFormat="ReStructuredText" 
			maxnbcolumns="79">
			<extensionClasspath>
				<!-- 
					For correct category merge, only the root file is provided to the generator 
					Other extensions workbenchExtension[xxx] are automatically loaded by the workbench 
				-->
				<path location="${architecture.dir}/source/scripts/stackTraceDecrypterExtension.jar"/>
			</extensionClasspath>
		</microbsp.buildJPFExtension>
	</target>
</project>
