.. _sdk_5_test_project:

Test a Project
==============

The SDK provides the capabilities to implement tests for a project.
There are different types of tests:

- test on the Simulator
- test on a J2SE VM
- test on a device
- project test on a device

Test on Simulator
-----------------

Create a Test
~~~~~~~~~~~~~

JUnit testing can be enabled for Add-On Library projects (build type ``microej-javalib``) 
or Application projects (build types ``microej-application`` and ``microej-firmware-singleapp``).

- add the following dependency in the ``module.ivy`` file of the project:

.. code-block:: xml

   <dependency conf="test->*" org="ej.library.test" name="junit" rev="1.7.1"/>

- create a JUnit class in the ``src/test/java`` folder.
  This can be done manually or with the SDK by right-clicking on the ``src/test/java`` folder 
  and select :guilabel:`New` > :guilabel:`Otherâ€¦` > :guilabel:`Java` > :guilabel:`JUnit` > :guilabel:`New JUnit Test Case`.

Once done, the JUnit processor generates MicroEJ compliant classes into a specific source folder named ``src-adpgenerated/junit/java``. 
These files are automatically managed and must not be edited manually.

Setup a Platform
~~~~~~~~~~~~~~~~

Before running tests, a target platform must be configured.

Execution in SDK
################

In order to execute the Test Suite in the SDK, a target platform must be configured in the MicroEJ workspace.
The following steps assume that a platform has been previously imported into the MicroEJ Platform repository (or available in the Workspace):

- Go to :guilabel:`Window` > :guilabel:`Preferences` > :guilabel:`MicroEJ` > :guilabel:`Platforms` (or :guilabel:`Platforms in workspace`).
- Select the desired platform on which to run the tests.
- Press :kbd:`F2` to expand the details.
- Select the the platform path and copy it to the clipboard.
- Go to :guilabel:`Window` > :guilabel:`Preferences` > :guilabel:`Ant` > :guilabel:`Runtime` and select the :guilabel:`Properties` tab.
- Click on :guilabel:`Add Property...` button and set a new property named ``target.platform.dir`` with the platform path pasted from the clipboard.

Execution during module build
#############################

In order to execute the Test Suite during the build of the module, 
a target platform must be configured in the module project as described in the section :ref:`platform_selection`.

Execute the Tests
~~~~~~~~~~~~~~~~~

- Right-click on the ``mylibrary`` project and select :guilabel:`Build Module`.
  After the library is built, the test suite engine launches available test cases and the build process fails in the console view.
- On the ``mylibrary`` project, right-click and select :guilabel:`Refresh`.
  A ``target~`` folder appears with intermediate build files. The JUnit report is available at ``target~\test\xml\TEST-test-report.xml``.
- Double-click on the file to open the JUnit test suite report.
- Modify the test case by replacing

::

   fail("Not yet implemented");

with

::

   Assert.assertTrue(true);

- Right-click again on the ``mylibrary`` project and select :guilabel:`Build Module`.
  The test is now successfully executed on the target platform so the MicroEJ Add-On Library is fully built and published without errors.
- Double-click on the JUnit test suite report to see the test has been successfully executed.

Run a Single Test Manually
~~~~~~~~~~~~~~~~~~~~~~~~~~

Each test can be run independently as each class contains a main entry point.

In the ``src-adpgenerated/junit/java`` folder, right-click on the desired
autogenerated class (``_SingleTest_[TestCase]_[TestMethod].java``) and select
:guilabel:`Run As` > :guilabel:`MicroEJ Application`.

The test is executed on the selected Platform and the output result is
dumped into the console.

..
   | Copyright 2022, MicroEJ Corp. Content in this space is free 
   for read and redistribute. Except if otherwise stated, modification 
   is subject to MicroEJ Corp prior approval.
   | MicroEJ is a trademark of MicroEJ Corp. All other trademarks and 
   copyrights are the property of their respective owners.
